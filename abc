{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c3c61cec-efa3-4767-ab8a-e74ad208b065",
   "metadata": {},
   "source": [
    "## Calculating the Probability of landing on Each number in each Iteration"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "07889a29-3b63-43c1-9acd-9437d0dcf9bc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.5, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]\n",
      "[0.5, 0.75, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]\n",
      "[0.5, 0.75, 0.625, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, 0.65625, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, 0.65625, 0.671875, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, 0.65625, 0.671875, 0.6640625, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, 0.65625, 0.671875, 0.6640625, 0.66796875, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, 0.65625, 0.671875, 0.6640625, 0.66796875, 0.666015625, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, 0.65625, 0.671875, 0.6640625, 0.66796875, 0.666015625, 0.6669921875, None, None, None, None, None, None, None, None, None, None, None, None, None, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, 0.65625, 0.671875, 0.6640625, 0.66796875, 0.666015625, 0.6669921875, 0.66650390625, None, None, None, None, None, None, None, None, None, None, None, None, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, 0.65625, 0.671875, 0.6640625, 0.66796875, 0.666015625, 0.6669921875, 0.66650390625, 0.666748046875, None, None, None, None, None, None, None, None, None, None, None, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, 0.65625, 0.671875, 0.6640625, 0.66796875, 0.666015625, 0.6669921875, 0.66650390625, 0.666748046875, 0.6666259765625, None, None, None, None, None, None, None, None, None, None, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, 0.65625, 0.671875, 0.6640625, 0.66796875, 0.666015625, 0.6669921875, 0.66650390625, 0.666748046875, 0.6666259765625, 0.66668701171875, None, None, None, None, None, None, None, None, None, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, 0.65625, 0.671875, 0.6640625, 0.66796875, 0.666015625, 0.6669921875, 0.66650390625, 0.666748046875, 0.6666259765625, 0.66668701171875, 0.666656494140625, None, None, None, None, None, None, None, None, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, 0.65625, 0.671875, 0.6640625, 0.66796875, 0.666015625, 0.6669921875, 0.66650390625, 0.666748046875, 0.6666259765625, 0.66668701171875, 0.666656494140625, 0.6666717529296875, None, None, None, None, None, None, None, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, 0.65625, 0.671875, 0.6640625, 0.66796875, 0.666015625, 0.6669921875, 0.66650390625, 0.666748046875, 0.6666259765625, 0.66668701171875, 0.666656494140625, 0.6666717529296875, 0.6666641235351562, None, None, None, None, None, None, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, 0.65625, 0.671875, 0.6640625, 0.66796875, 0.666015625, 0.6669921875, 0.66650390625, 0.666748046875, 0.6666259765625, 0.66668701171875, 0.666656494140625, 0.6666717529296875, 0.6666641235351562, 0.6666679382324219, None, None, None, None, None, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, 0.65625, 0.671875, 0.6640625, 0.66796875, 0.666015625, 0.6669921875, 0.66650390625, 0.666748046875, 0.6666259765625, 0.66668701171875, 0.666656494140625, 0.6666717529296875, 0.6666641235351562, 0.6666679382324219, 0.6666660308837891, None, None, None, None, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, 0.65625, 0.671875, 0.6640625, 0.66796875, 0.666015625, 0.6669921875, 0.66650390625, 0.666748046875, 0.6666259765625, 0.66668701171875, 0.666656494140625, 0.6666717529296875, 0.6666641235351562, 0.6666679382324219, 0.6666660308837891, 0.6666669845581055, None, None, None, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, 0.65625, 0.671875, 0.6640625, 0.66796875, 0.666015625, 0.6669921875, 0.66650390625, 0.666748046875, 0.6666259765625, 0.66668701171875, 0.666656494140625, 0.6666717529296875, 0.6666641235351562, 0.6666679382324219, 0.6666660308837891, 0.6666669845581055, 0.6666665077209473, None, None, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, 0.65625, 0.671875, 0.6640625, 0.66796875, 0.666015625, 0.6669921875, 0.66650390625, 0.666748046875, 0.6666259765625, 0.66668701171875, 0.666656494140625, 0.6666717529296875, 0.6666641235351562, 0.6666679382324219, 0.6666660308837891, 0.6666669845581055, 0.6666665077209473, 0.6666667461395264, None, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, 0.65625, 0.671875, 0.6640625, 0.66796875, 0.666015625, 0.6669921875, 0.66650390625, 0.666748046875, 0.6666259765625, 0.66668701171875, 0.666656494140625, 0.6666717529296875, 0.6666641235351562, 0.6666679382324219, 0.6666660308837891, 0.6666669845581055, 0.6666665077209473, 0.6666667461395264, 0.6666666269302368, None]\n",
      "[0.5, 0.75, 0.625, 0.6875, 0.65625, 0.671875, 0.6640625, 0.66796875, 0.666015625, 0.6669921875, 0.66650390625, 0.666748046875, 0.6666259765625, 0.66668701171875, 0.666656494140625, 0.6666717529296875, 0.6666641235351562, 0.6666679382324219, 0.6666660308837891, 0.6666669845581055, 0.6666665077209473, 0.6666667461395264, 0.6666666269302368, 0.6666666865348816]\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import random\n",
    "\n",
    "x = [None] * 24\n",
    "a = 1\n",
    "b = 0\n",
    "for i in range(0, 24):\n",
    "    x[i] = 0.5 * a + 0.5 * b\n",
    "    b = a\n",
    "    a = x[i]\n",
    "    print(x)    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "fcdbb69f-22ea-4075-87f4-66d65b0e8e2a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[286]\n"
     ]
    }
   ],
   "source": [
    "print(jackpot(5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ea80b0c7-1e44-45cf-8541-9cff75b53829",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e03c72b9-6672-40c9-b741-468e34abcf20",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
